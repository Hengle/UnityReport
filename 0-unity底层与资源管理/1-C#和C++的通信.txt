一、C#和C++的通信
前面我的文章写过c#/c/lua是如何交互的，通过将c#的函数和属性，注册到lua虚拟机中，可以实现通过c来互相交互。
而c#和c++的交互，也是非常类似的，c#可以直接的通过P/Invoke的方式来调用c++的函数，而C++调用C#的函数，C++的函数是被封装成DLL来放在Unity的工程文件中的Plugins中，则需要基于.NET来操作，利用Marshal.GetFunctionPointerForDelegate来获取函数的指针，然后传递到c++中进行操作。
二、编辑器下实现实时的编译和脚本更新
在Unity中，我们可以在打开的Unity中，直接编译c#的文件，这样不需要每次都关闭工程再打开来执行编译，而C++由于通过DLL来调用，每次更新的C++都需要关闭工程，然后更新DLL，然后打开工程，这样的操作，对于编辑器下的开发是极其耗费的。
对于上面提到的反复开关工程执行DLL的更新，可以利用[DllImport]的属性来实现在编辑器下的更新。
该属性是基于OS的，所以不会存在跨平台的问题。