1.网络游戏的物理结构
p2p方式：玩家互联不需要额外的服务器，主要通过文件共享等方式传输数据。
客户端/服务器方式：各客户端需要先连接服务器，再通过服务器与其它玩家传输数据。
服务器的作用是传输与之连接的各个玩家的数据，并将这些数据保存到数据库。

2.协议是为了进行网络数据通信而制定的一种规范，使用特定协议传输的数据的基本单位是数据包。
tcp/ip udp协议
tcp/ip协议：可靠的协议，发送方需要确认对方是否做好准备，传输的数据包是由先后顺序的，如果传输过程中数据包有丢失，发送方要重新传输这些数据。基于以上几点，tcp/ip协议的传输速度要比udp慢一点。
udp协议：不可靠的，发送前无需确认，udp对传输顺序也没有要求，即使有数据包丢失也不会重新传输这些数据，udp协议主要用于即使有数据包流失也无妨的网络应用，例如fps类游戏、速度类游戏等。

3.network view三个属性，开发人员只能对其中两个进行使用
state synchronization:状态同步，在这里设置network view收发数据的相关属性，有3种
	Off:不实时传输数据，仅用于RPC调用
	Reliable Delta Compressed:基于Tcp/ip协议的传输
	Unreliable:基于udp协议的传输

状态同步：在工程设置中可以设置sendrate，sendrate为每秒传送数据包的次数，默认为每秒15次。

远程过程调用RPC:定义rpc函数时，需要在函数前声明[RPC]属性。
rpc函数需要3个参数：第一个string类型，指定要远程调用的函数的名称，
第二个为远程调用模式，可以通过RPCMode指定要调用哪些对象的RPC函数。
RPCMode.Server/RPCMode.Others/RPCMode.OthersBuffered/RPCMode.All/RPCMode.AllBuffered
第三个参数可以传递一些被调用的函数需要的参数值。
