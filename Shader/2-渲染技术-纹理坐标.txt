1.贴图的tiling和offset属性
offset：指明使用贴图的起始位置，取值范围为0-1
tiling：指明从offset位置处的大小区域，区域的取值范围一般为(-1,1)，超过的话部分会按比例生成新的区域拼接上原先的。

也就是说，tiling指明了使用的贴图为输入贴图的多少倍，超过1的会自动复制原图进行拼接，例如tiling为2，那么就是两张重复的贴图合在一起，小于1的话就在原图上截图皆可。
offset指明了使用的贴图在输入贴图处的起始位置，假如位置超过了1，就会对1取余。


2.图片导入设置中的wrap mode属性
repeat/flamp/mirror
repeat：如果纹理坐标超过了1，那么它的整数部分将会被舍弃，而直接使用小数部分进行采样。
clamp：如果纹理坐标大于1，将会截取到1，如果小于0，将会截取到0；

3.纹理坐标，模型上面的贴图是通过纹理映射技术将其附加在模型上面，美术人员利用Max工具建模时，会在建模软件中利用纹理展开技术把纹理映射坐标存储在每个顶点上，纹理映射坐标定义了该顶点在纹理中对应的2D坐标。这些坐标使用一个二维变量（u，v）来表示，纹理映射坐标也称为UV坐标。

纹理的大小可以是多种多样的，可以是256X256或者1028X1028，但顶点的UV坐标的范围通常都被归一化到［0，1］范围内，需要注意的是，纹理采样时使用的纹理坐标不一定是在［0，1］范围内。实际上，这种不在［0，1］范围内的纹理坐标有时会非常有用。我们会在后面的博客中相加阐述。

在前面的文章中给大家介绍过，在OpenGL里，纹理空间的原点位于左下角，在DirectX中，原点位于左上角。而在Unity中避免了这种差异问题，Unity是跨平台的引擎，只有一种坐标系，它使用的是OpenGL也就是说，原点位于纹理左下角。


3.纹理坐标与顶点坐标
纹理实际上是一个二维数组，它的元素是一些颜色值。单个的颜色值被称为纹理元素（texture elements）或纹理像素（texel）。
在绘制纹理映射场景时，不仅要给每个顶点定义几何坐标，而且也要定义纹理坐标。经过多种变换后，几何坐标决定顶点在屏幕上绘制的位置，而纹理坐标决定纹理图像中的哪一个纹素赋予该顶点。并且顶点之间的纹理坐标通过插值确定。

纹理坐标也是顶点的属性，unity中的tiling可以视作是顶点的纹理坐标，如果是repeat模式对平面贴图，当tiling是0.5，那么就会把纹理中间的纹素映射到平面的右上角上，所以就显示出把1/4图片放大的效果。如果是3.5，那么中间的顶点的纹理坐标就会采用插值的方式确定，但是3.5如何和纹素对应，那就需要对纹理坐标进行处理，对坐标取小数部分，那么1-2部分其实和0-1部分的贴图是一样的，这样就出现了重复效果。